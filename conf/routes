# This file is part of ballot_box.
# Copyright (C) 2014-2016  Sequent Tech Inc <legal@sequentech.io>

# ballot_box is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License.

# ballot_box  is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with ballot_box.  If not, see <http://www.gnu.org/licenses/>.

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# election manager
POST    /api/election/:id                                     controllers.ElectionsApi.register(id: Long)
GET     /api/election/:id                                     controllers.ElectionsApi.get(id: Long)
POST    /api/election/:id/update                              controllers.ElectionsApi.update(id: Long)
POST    /api/election/:id/update-share                        controllers.ElectionsApi.updateShare(id: Long)
POST    /api/election/:id/create                              controllers.ElectionsApi.create(id: Long)
POST    /api/election/:id/start                               controllers.ElectionsApi.start(id: Long)
POST    /api/election/:id/stop                                controllers.ElectionsApi.stop(id: Long)
POST    /api/election/:id/suspend                             controllers.ElectionsApi.suspend(id: Long)
POST    /api/election/:id/resume                              controllers.ElectionsApi.resume(id: Long)
POST    /api/election/:id/allow-tally                         controllers.ElectionsApi.allowTally(id: Long)
POST    /api/election/:id/virtual-tally                       controllers.ElectionsApi.virtualTally(id: Long)
POST    /api/election/:id/set-start-date                      controllers.ElectionsApi.setStartDate(id: Long)
POST    /api/election/:id/set-stop-date                       controllers.ElectionsApi.setStopDate(id: Long)
POST    /api/election/:id/set-tally-date                      controllers.ElectionsApi.setTallyDate(id: Long)
POST    /api/election/:id/set-public-candidates               controllers.ElectionsApi.setPublicCandidates(id: Long)
POST    /api/election/:id/tally                               controllers.ElectionsApi.tally(id: Long)
POST    /api/election/:id/tally-voter-ids                     controllers.ElectionsApi.tallyWithVoterIds(id: Long)
POST    /api/election/:id/tally-no-dump                       controllers.ElectionsApi.tallyNoDump(id: Long)
POST    /api/election/:id/calculate-results                   controllers.ElectionsApi.calculateResults(id: Long)
POST    /api/election/:id/update-ballot-boxes-config          controllers.ElectionsApi.updateBallotBoxesResultsConfig(id: Long)
POST    /api/election/:id/publish-results                     controllers.ElectionsApi.publishResults(id: Long)
POST    /api/election/:id/unpublish-results                   controllers.ElectionsApi.unpublishResults(id: Long)
GET     /api/election/:id/results                             controllers.ElectionsApi.getResults(id: Long)
GET     /api/election/:id/voters                              controllers.ElectionsApi.getElectionVoters(id: Long)
GET     /api/election/:id/stats                               controllers.ElectionsApi.getElectionStats(id: Long)
GET     /api/authorities                                      controllers.ElectionsApi.getAuthorities

# ballotbox
POST    /api/election/:id/voter/:voterId                      controllers.BallotboxApi.vote(id: Long, voterId: String)
GET     /api/election/:id/hash/:hash                          controllers.BallotboxApi.checkHash(id: Long, hash: String)

# eo callbacks
POST    /api/election/:id/keydone                             controllers.ElectionsApi.keydone(id: Long)
POST    /api/election/:id/tallydone                           controllers.ElectionsApi.tallydone(id: Long)

# authorities
POST    /api/election/:id/download-private-share              controllers.ElectionsApi.downloadPrivateKeyShare(id: Long)

# admin
POST    /api/election/:id/dump-pks                            controllers.ElectionsApi.dumpPks(id: Long)
POST    /api/election/:id/dump-votes                          controllers.BallotboxApi.dumpVotes(id: Long)
POST    /api/election/:id/dump-votes-voter-ids-file           controllers.BallotboxApi.dumpVotesWithVoterIdsFile(id: Long)
POST    /api/election/:id/dump-votes-iam-voter-ids        controllers.BallotboxApi.dumpVotesWithAuthapiVoterIds(id: Long)

# file
# GET /api/election/:id/private/:file                         controllers.Files.get(file: String)
