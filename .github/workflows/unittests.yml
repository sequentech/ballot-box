name: Tests

on:
  push:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'
    tags:
    - '**'
  pull_request:
    branches:
    - master
    - '[0-9]+.[0-9]+.x'

jobs:
  unittest:
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: agora_elections
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: agora_elections
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      memcached:
        image: memcached:latest
        ports:
        - 11211/udp
        # needed because the memcached container does not provide a healthcheck
        options: --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    # source: https://www.scala-sbt.org/1.x/docs/GitHub-Actions-with-sbt.html
    - name: Setup Scala, Sbt and Java 8
      uses: olafurpg/setup-scala@v10
      with:
        java-version: "adopt@1.8"

    - name: Install dependencies
      run: |
        apt update
        apt install -y wget postgresql-client

    # This is for caching purposes, just following the steps in 
    # https://www.scala-sbt.org/1.x/docs/GitHub-Actions-with-sbt.html
    - name: Coursier cache
      uses: coursier/cache-action@v5

    - name: Build
      run: |
        sbt clean stage

    - name: Create pom.xml
      run: |
        sbt makePom

    - name: Upload pom.xml artifact
      uses: actions/upload-artifact@v2
      with:	
        name: pom.xml
        path: target/**/*.pom
        if-no-files-found: error

    - name: Set test data
      run: |
        cp conf/test.local.conf.example conf/test.local.conf
        mkdir -p /tmp/agora_elections/datastore/public
        mkdir -p /tmp/agora_elections/datastore/private
        cp -rf testdata/eopeers /etc
        cp -rf testdata/keystore.jks /tmp

    - name: tests
      run: sbt test
      env:
        PGSYSCONFDIR: testdata

    - name: Tear down caching
      run: |
        # This is for caching purposes, just following the steps in 
        # https://www.scala-sbt.org/1.x/docs/GitHub-Actions-with-sbt.html
        rm -rf "$HOME/.ivy2/local" || true
        find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
        find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
        find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
        find $HOME/.sbt                              -name "*.lock"               -delete || true

